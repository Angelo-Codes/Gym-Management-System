import java.awt.Color;
import project.ConnectionProvider;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.util.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author BSIT-4D
 */
public class Home extends javax.swing.JFrame {
     
    public Home() {        
        initComponents();
        
        inc1.setVisible(false);
        t.setVisible(true);
        a.setVisible(false);
        s.setVisible(false);
        jButton3.setEnabled(false);
        jButton5.setEnabled(false);
        jButton4.setEnabled(false);
        search.setEnabled(false);
        search1.setEnabled(false);
        DELETE.setEnabled(false);
        ADD.setEnabled(false);
        UPDATE.setEnabled(false);

    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        memberlist = new javax.swing.JTable();
        search = new javax.swing.JButton();
        MIDv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        namev = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        numberv = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        genderv = new javax.swing.JComboBox<>();
        agev = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        yearv = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        amountv = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        Activev = new javax.swing.JTextField();
        endAtv = new javax.swing.JTextField();
        Stat = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        w = new javax.swing.JTextField();
        bmi = new javax.swing.JTextField();
        h = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        d = new javax.swing.JTextField();
        y = new javax.swing.JTextField();
        m = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        PRINT1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        search2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        clist = new javax.swing.JTable();
        jButton14 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        CIDv1 = new javax.swing.JTextField();
        search3 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        sn = new javax.swing.JTextField();
        search1 = new javax.swing.JButton();
        cname = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        cnumbe = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        t2 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        camount = new javax.swing.JTextField();
        e17 = new javax.swing.JCheckBox();
        e18 = new javax.swing.JCheckBox();
        e19 = new javax.swing.JCheckBox();
        e20 = new javax.swing.JCheckBox();
        e21 = new javax.swing.JCheckBox();
        e22 = new javax.swing.JCheckBox();
        e23 = new javax.swing.JCheckBox();
        e24 = new javax.swing.JCheckBox();
        e25 = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        e26 = new javax.swing.JCheckBox();
        e27 = new javax.swing.JCheckBox();
        e28 = new javax.swing.JCheckBox();
        e29 = new javax.swing.JCheckBox();
        e30 = new javax.swing.JCheckBox();
        e31 = new javax.swing.JCheckBox();
        jLabel30 = new javax.swing.JLabel();
        na8 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        na7 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        na6 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        e32 = new javax.swing.JTextField();
        DELETE = new javax.swing.JButton();
        RESET = new javax.swing.JButton();
        ADD = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        t3 = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        e33 = new javax.swing.JCheckBox();
        tr = new javax.swing.JLabel();
        log2 = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        log1 = new javax.swing.JTextField();
        PRINT = new javax.swing.JButton();
        acc = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        sales = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        salestable = new javax.swing.JTable();
        MONTHLY = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        log3 = new javax.swing.JTextField();
        search4 = new javax.swing.JButton();
        t = new javax.swing.JPanel();
        tc = new javax.swing.JTextField();
        T1 = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        ta = new javax.swing.JTextField();
        jButton31 = new javax.swing.JButton();
        tf = new javax.swing.JTextField();
        jButton21 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tlist = new javax.swing.JTable();
        bnamev3 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jButton30 = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        tf2 = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        tf3 = new javax.swing.JTextField();
        jButton34 = new javax.swing.JButton();
        a = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        acc1 = new javax.swing.JTextField();
        jButton26 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        user = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        jButton32 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        aclist = new javax.swing.JTable();
        jButton24 = new javax.swing.JButton();
        s = new javax.swing.JPanel();
        cBox2 = new javax.swing.JCheckBox();
        inc1 = new javax.swing.JLabel();
        c4 = new javax.swing.JPasswordField();
        jButton11 = new javax.swing.JButton();
        c3 = new javax.swing.JPasswordField();
        c5 = new javax.swing.JTextField();
        a2 = new javax.swing.JTextField();
        c1 = new javax.swing.JComboBox<>();
        jToggleButton1 = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Blogout = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1055, 735));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(253, 253, 220));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(102, 102, 102));
        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        memberlist.setAutoCreateRowSorter(true);
        memberlist.setBackground(new java.awt.Color(255, 255, 226));
        memberlist.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        memberlist.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        memberlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MEM_ID", "FULL NAME", "CONTACT NUMBER", "GENDER", "BIRTH DATE", "AGE", "HEIGHT", "WEIGHT", "BMI", "MEM_ACTIVE_AT", "MEM_END_AT", "AMOUNT", "STATUS"
            }
        ));
        memberlist.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        memberlist.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        memberlist.setGridColor(new java.awt.Color(255, 255, 226));
        memberlist.setSelectionBackground(new java.awt.Color(255, 255, 226));
        memberlist.setSelectionForeground(new java.awt.Color(255, 255, 226));
        jScrollPane1.setViewportView(memberlist);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 45, 730, 480));

        search.setBackground(new java.awt.Color(255, 255, 204));
        search.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        search.setText("Select");
        search.setBorder(null);
        search.setBorderPainted(false);
        search.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel4.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 90, 30));

        MIDv.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        MIDv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MIDvMouseClicked(evt);
            }
        });
        jPanel4.add(MIDv, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 70, 30));

        jLabel3.setBackground(new java.awt.Color(102, 102, 102));
        jLabel3.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel3.setText("Member ID");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        jLabel5.setBackground(new java.awt.Color(102, 102, 102));
        jLabel5.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel5.setText("Full Name");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        namev.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jPanel4.add(namev, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 168, 30));

        jLabel6.setBackground(new java.awt.Color(102, 102, 102));
        jLabel6.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel6.setText("Contact Number");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, 30));

        numberv.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        numberv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numbervKeyReleased(evt);
            }
        });
        jPanel4.add(numberv, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 168, 30));

        jLabel12.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel12.setText("Gender");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        genderv.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        genderv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel4.add(genderv, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 168, 30));

        agev.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jPanel4.add(agev, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 170, 30));

        jLabel9.setBackground(new java.awt.Color(102, 102, 102));
        jLabel9.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel9.setText("Weight/pound");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, -1, 20));

        jLabel14.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        jLabel14.setText("Membership Monthly");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 144, -1));

        yearv.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        yearv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));
        yearv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearvActionPerformed(evt);
            }
        });
        jPanel4.add(yearv, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 60, 20));

        jLabel16.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel16.setText("Registered");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, 20));

        jLabel17.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel17.setText("Expired At");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, 20));

        jLabel15.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel15.setText("Amount :");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, 30));

        amountv.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        amountv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                amountvMouseClicked(evt);
            }
        });
        jPanel4.add(amountv, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, 90, 30));

        jButton3.setBackground(new java.awt.Color(0, 204, 204));
        jButton3.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Add1.jpg"))); // NOI18N
        jButton3.setText("Add    ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 164, -1));

        jButton5.setBackground(new java.awt.Color(255, 51, 51));
        jButton5.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        jButton5.setText("Delete ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 164, -1));

        jButton7.setBackground(new java.awt.Color(255, 255, 0));
        jButton7.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/download.png"))); // NOI18N
        jButton7.setText("Reset ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 164, -1));

        jButton4.setBackground(new java.awt.Color(0, 153, 255));
        jButton4.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save.png"))); // NOI18N
        jButton4.setText("Save Update ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 164, -1));

        jLabel1.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jLabel1.setText("Month");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, -1, 20));

        jButton13.setBackground(new java.awt.Color(255, 255, 204));
        jButton13.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton13.setText("Refresh");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 20, 100, -1));

        Activev.setFont(new java.awt.Font("MS Gothic", 0, 12)); // NOI18N
        jPanel4.add(Activev, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 120, -1));

        endAtv.setFont(new java.awt.Font("MS Gothic", 0, 12)); // NOI18N
        jPanel4.add(endAtv, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 120, -1));

        Stat.setBackground(new java.awt.Color(255, 255, 204));
        Stat.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        Stat.setText("Status ");
        Stat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatActionPerformed(evt);
            }
        });
        jPanel4.add(Stat, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 0, 100, -1));

        jButton25.setBackground(new java.awt.Color(255, 255, 204));
        jButton25.setText("Calculate BMI");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        jLabel11.setBackground(new java.awt.Color(102, 102, 102));
        jLabel11.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel11.setText("Age");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, 30));

        jLabel23.setBackground(new java.awt.Color(102, 102, 102));
        jLabel23.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel23.setText("Height/inches");
        jPanel4.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, 20));
        jPanel4.add(w, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 70, -1));

        bmi.setEditable(false);
        jPanel4.add(bmi, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 150, -1));
        jPanel4.add(h, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 70, -1));

        jLabel2.setText("DD");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 20, 20));

        d.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dKeyReleased(evt);
            }
        });
        jPanel4.add(d, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 40, 30));
        jPanel4.add(y, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 40, 30));
        jPanel4.add(m, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 40, 30));

        jLabel7.setText("Birth Date");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, 20));

        jLabel8.setText("YYYY");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 30, 20));

        jLabel10.setText("MM");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 20, 20));

        PRINT1.setBackground(new java.awt.Color(255, 255, 204));
        PRINT1.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        PRINT1.setText("PRINT");
        PRINT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRINT1ActionPerformed(evt);
            }
        });
        jPanel4.add(PRINT1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, 100, -1));

        jTabbedPane1.addTab("    Member    ", jPanel4);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        search2.setBackground(new java.awt.Color(255, 255, 204));
        search2.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        search2.setText("Search");
        search2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search2ActionPerformed(evt);
            }
        });
        jPanel5.add(search2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 11, -1, 30));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        clist.setBackground(new java.awt.Color(255, 255, 226));
        clist.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        clist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRAN_ID", "FULL NAME", "CONTACT NUMBER", "DATE", "TIME", "TRAINER_ID", "SESSION_ID", "SESSION", "EQUIPMENT", "WEIGHT", "SETS", "REPS", "AMOUNT"
            }
        ));
        clist.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(clist);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 51, 720, 480));

        jButton14.setBackground(new java.awt.Color(255, 255, 204));
        jButton14.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton14.setText("REFRESH");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 30, 100, -1));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel21.setText("If customer has already registered  just sellect the ID");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 280, 20));

        jLabel41.setBackground(new java.awt.Color(0, 0, 0));
        jLabel41.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel41.setText("Customer ID:");
        jPanel2.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 30));

        CIDv1.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jPanel2.add(CIDv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 70, 30));

        search3.setBackground(new java.awt.Color(255, 255, 204));
        search3.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        search3.setText("Select");
        search3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search3ActionPerformed(evt);
            }
        });
        jPanel2.add(search3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 80, 30));

        jLabel38.setBackground(new java.awt.Color(0, 0, 0));
        jLabel38.setFont(new java.awt.Font("MS Gothic", 0, 12)); // NOI18N
        jLabel38.setText("Transaction ID:");
        jPanel2.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, 20));

        jLabel39.setBackground(new java.awt.Color(102, 102, 102));
        jLabel39.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel39.setText("Full Name");
        jPanel2.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 30));

        sn.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        sn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                snMouseClicked(evt);
            }
        });
        jPanel2.add(sn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 70, 30));

        search1.setBackground(new java.awt.Color(255, 255, 204));
        search1.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        search1.setText("Select");
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });
        jPanel2.add(search1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 80, 30));

        cname.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jPanel2.add(cname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 154, 30));

        jLabel40.setBackground(new java.awt.Color(102, 102, 102));
        jLabel40.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel40.setText("Contact Number");
        jPanel2.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, 30));

        cnumbe.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        cnumbe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cnumbeKeyReleased(evt);
            }
        });
        jPanel2.add(cnumbe, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 154, 30));

        jLabel46.setBackground(new java.awt.Color(102, 102, 102));
        jLabel46.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel46.setText("Date");
        jPanel2.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, 30));

        date.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        date.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateMouseClicked(evt);
            }
        });
        jPanel2.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 154, 30));

        jLabel59.setBackground(new java.awt.Color(102, 102, 102));
        jLabel59.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel59.setText("Trainer");
        jPanel2.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, 30));

        t2.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        t2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t2KeyReleased(evt);
            }
        });
        jPanel2.add(t2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 154, 30));

        jLabel36.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel36.setText("Amount :");
        jPanel2.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, 20));

        camount.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        camount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                camountMouseClicked(evt);
            }
        });
        jPanel2.add(camount, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 154, 30));

        e17.setBackground(new java.awt.Color(204, 204, 204));
        e17.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e17.setText("Training Bench");
        jPanel2.add(e17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, -1, 20));

        e18.setBackground(new java.awt.Color(204, 204, 204));
        e18.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e18.setText("BarBell Set");
        jPanel2.add(e18, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, -1, 20));

        e19.setBackground(new java.awt.Color(204, 204, 204));
        e19.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e19.setText("Kettlebell Set");
        jPanel2.add(e19, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, -1, 20));

        e20.setBackground(new java.awt.Color(204, 204, 204));
        e20.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e20.setText("Dumbbell Set");
        jPanel2.add(e20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, -1, 20));

        e21.setBackground(new java.awt.Color(204, 204, 204));
        e21.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e21.setText("Fitness Ball");
        jPanel2.add(e21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, -1, -1));

        e22.setBackground(new java.awt.Color(204, 204, 204));
        e22.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e22.setText("Rowing Machine");
        jPanel2.add(e22, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 530, -1, -1));

        e23.setBackground(new java.awt.Color(204, 204, 204));
        e23.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e23.setText("Stationary Bicycle");
        jPanel2.add(e23, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 560, -1, -1));

        e24.setBackground(new java.awt.Color(204, 204, 204));
        e24.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e24.setText("Treadmill");
        jPanel2.add(e24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, -1, 20));

        e25.setBackground(new java.awt.Color(204, 204, 204));
        e25.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e25.setText("Pull-Up Frame and Bar");
        jPanel2.add(e25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 590, -1, 20));

        jLabel24.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel24.setText("Equipment");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, 20));

        jLabel25.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel25.setText("Session");
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, 20));

        e26.setBackground(new java.awt.Color(204, 204, 204));
        e26.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e26.setText("Shoulder");
        jPanel2.add(e26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, 20));

        e27.setBackground(new java.awt.Color(204, 204, 204));
        e27.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e27.setText("Abs");
        jPanel2.add(e27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, 20));

        e28.setBackground(new java.awt.Color(204, 204, 204));
        e28.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e28.setText("Biceps");
        jPanel2.add(e28, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, -1, 20));

        e29.setBackground(new java.awt.Color(204, 204, 204));
        e29.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e29.setText("Triceps");
        jPanel2.add(e29, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, -1, 20));

        e30.setBackground(new java.awt.Color(204, 204, 204));
        e30.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e30.setText("Legs");
        jPanel2.add(e30, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, -1, -1));

        e31.setBackground(new java.awt.Color(204, 204, 204));
        e31.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e31.setText("Back");
        jPanel2.add(e31, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 390, -1, -1));

        jLabel30.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jLabel30.setText("Reps");
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 720, -1, 30));

        na8.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        na8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                na8MouseClicked(evt);
            }
        });
        jPanel2.add(na8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 710, 150, 30));

        jLabel28.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jLabel28.setText("Sets");
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 690, -1, 30));

        na7.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jPanel2.add(na7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 680, 150, 30));

        jLabel32.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jLabel32.setText("Weight/Kg ");
        jPanel2.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, -1, 30));

        na6.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jPanel2.add(na6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 650, 150, 30));

        jLabel26.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jLabel26.setText("Other Equipment");
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 620, -1, 30));

        e32.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        jPanel2.add(e32, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 620, 150, 30));

        DELETE.setBackground(new java.awt.Color(255, 51, 51));
        DELETE.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        DELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        DELETE.setText("Delete");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });
        jPanel2.add(DELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 800, 130, 30));

        RESET.setBackground(new java.awt.Color(255, 255, 51));
        RESET.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        RESET.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/download.png"))); // NOI18N
        RESET.setText("Reset");
        RESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESETActionPerformed(evt);
            }
        });
        jPanel2.add(RESET, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 770, 130, 30));

        ADD.setBackground(new java.awt.Color(0, 204, 51));
        ADD.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        ADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Add1.jpg"))); // NOI18N
        ADD.setText("Add  ");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });
        jPanel2.add(ADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 770, 130, 30));

        UPDATE.setBackground(new java.awt.Color(0, 102, 255));
        UPDATE.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        UPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        UPDATE.setText("Save Update");
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });
        jPanel2.add(UPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 800, 130, 30));

        t3.setFont(new java.awt.Font("MS PGothic", 0, 12)); // NOI18N
        t3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t3MouseClicked(evt);
            }
        });
        jPanel2.add(t3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 154, 30));

        jLabel60.setBackground(new java.awt.Color(102, 102, 102));
        jLabel60.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel60.setText("Time");
        jPanel2.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, 30));

        e33.setBackground(new java.awt.Color(204, 204, 204));
        e33.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        e33.setText("Chest");
        jPanel2.add(e33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, 20));

        tr.setForeground(new java.awt.Color(204, 204, 204));
        jPanel2.add(tr, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 50, 10));

        jScrollPane7.setViewportView(jPanel2);

        jPanel5.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 530));

        log2.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        log2.setText("NAME");
        log2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                log2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                log2FocusLost(evt);
            }
        });
        jPanel5.add(log2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 109, 30));

        jButton15.setBackground(new java.awt.Color(255, 255, 204));
        jButton15.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton15.setText("Search");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, -1, 30));

        log1.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        log1.setText("DATE");
        log1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                log1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                log1FocusLost(evt);
            }
        });
        jPanel5.add(log1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 109, 30));

        PRINT.setBackground(new java.awt.Color(255, 255, 204));
        PRINT.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        PRINT.setText("PRINT");
        PRINT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRINTActionPerformed(evt);
            }
        });
        jPanel5.add(PRINT, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 10, 100, -1));

        jTabbedPane1.addTab("  Daily Log  ", jPanel5);

        acc.setBackground(new java.awt.Color(102, 102, 102));
        acc.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sales.setBackground(new java.awt.Color(204, 204, 204));
        sales.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("YEARLY");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        sales.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 80, -1));

        salestable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "YEAR", "MONTH", "DAY", "PAYMENT"
            }
        ));
        jScrollPane4.setViewportView(salestable);

        sales.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 730, 420));

        MONTHLY.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        MONTHLY.setText("MONTHLY");
        MONTHLY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MONTHLYActionPerformed(evt);
            }
        });
        sales.add(MONTHLY, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 100, -1));

        jButton12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton12.setText("PRINT");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        sales.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 30, 90, -1));

        jButton16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton16.setText("DAILY");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        sales.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 90, -1));

        log3.setFont(new java.awt.Font("MS Gothic", 1, 12)); // NOI18N
        log3.setText("DATE");
        log3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                log3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                log3FocusLost(evt);
            }
        });
        sales.add(log3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 109, 30));

        search4.setBackground(new java.awt.Color(255, 255, 204));
        search4.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        search4.setText("Search");
        search4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search4ActionPerformed(evt);
            }
        });
        sales.add(search4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, -1, 30));

        jLayeredPane1.add(sales, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 500));

        t.setBackground(new java.awt.Color(204, 204, 204));
        t.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        t.add(tc, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 141, 30));

        T1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                T1MouseClicked(evt);
            }
        });
        t.add(T1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 60, 30));

        jButton22.setBackground(new java.awt.Color(255, 255, 204));
        jButton22.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton22.setText("Update");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        t.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, 100, -1));

        jLabel62.setBackground(new java.awt.Color(102, 102, 102));
        jLabel62.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel62.setText("Contact Number");
        t.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, 30));

        jLabel63.setBackground(new java.awt.Color(102, 102, 102));
        jLabel63.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel63.setText("Address");
        t.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 70, 30));

        jLabel61.setBackground(new java.awt.Color(102, 102, 102));
        jLabel61.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel61.setText("First name");
        t.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 70, 30));
        t.add(ta, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 141, 30));

        jButton31.setBackground(new java.awt.Color(255, 255, 204));
        jButton31.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton31.setText("Add");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        t.add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 100, -1));
        t.add(tf, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 141, 30));

        jButton21.setBackground(new java.awt.Color(255, 255, 204));
        jButton21.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton21.setText("REFRESH");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        t.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, 100, -1));

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        tlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRAINER ID", "FIRST NAME", "MIDDLE NAME", "LAST NAME", "CONTACT NUMBER", "ADDRESS"
            }
        ));
        jScrollPane3.setViewportView(tlist);

        t.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 710, 330));

        bnamev3.setBackground(new java.awt.Color(255, 255, 204));
        bnamev3.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        bnamev3.setText("Select");
        bnamev3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnamev3ActionPerformed(evt);
            }
        });
        t.add(bnamev3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 80, 30));

        jLabel31.setBackground(new java.awt.Color(102, 102, 102));
        jLabel31.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel31.setText("Trainer_ID:");
        t.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 30));

        jButton30.setBackground(new java.awt.Color(255, 255, 204));
        jButton30.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton30.setText("Delete");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        t.add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 100, -1));

        jLabel65.setBackground(new java.awt.Color(102, 102, 102));
        jLabel65.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel65.setText("Middle name");
        t.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 70, 30));
        t.add(tf2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 141, 30));

        jLabel66.setBackground(new java.awt.Color(102, 102, 102));
        jLabel66.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel66.setText("Last name");
        t.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 70, 30));
        t.add(tf3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 141, 30));

        jButton34.setBackground(new java.awt.Color(255, 255, 204));
        jButton34.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton34.setText("PRINT");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });
        t.add(jButton34, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 100, -1));

        jLayeredPane1.add(t, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 500));

        a.setBackground(new java.awt.Color(204, 204, 204));
        a.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel33.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        jLabel33.setText("Account_ID");
        a.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, -1, 30));
        a.add(acc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 70, 30));

        jButton26.setBackground(new java.awt.Color(255, 255, 204));
        jButton26.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton26.setText("Select");
        jButton26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        a.add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, 30));

        jButton33.setBackground(new java.awt.Color(255, 255, 204));
        jButton33.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton33.setText("Update");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        a.add(jButton33, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 101, 24));

        user.setText("New username");
        user.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userFocusLost(evt);
            }
        });
        a.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 141, 30));

        pass.setText("New password");
        pass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passFocusLost(evt);
            }
        });
        a.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 141, 30));

        jButton32.setBackground(new java.awt.Color(255, 255, 204));
        jButton32.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton32.setText("Delete");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });
        a.add(jButton32, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 101, -1));

        aclist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ACCOUNT_ID", "USER_NAME", "PASSWORD", "USER_TYPE"
            }
        ));
        jScrollPane5.setViewportView(aclist);

        a.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 440, 330));

        jButton24.setBackground(new java.awt.Color(255, 255, 204));
        jButton24.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jButton24.setText("Show All List");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        a.add(jButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 440, -1));

        jLayeredPane1.add(a, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 500));

        s.setBackground(new java.awt.Color(204, 204, 204));
        s.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cBox2.setBackground(new java.awt.Color(204, 204, 204));
        cBox2.setText("show password");
        cBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBox2ActionPerformed(evt);
            }
        });
        s.add(cBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, -1, 30));

        inc1.setForeground(new java.awt.Color(255, 51, 51));
        inc1.setText("Password not same");
        s.add(inc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, 110, 30));

        c4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        c4.setForeground(new java.awt.Color(153, 153, 153));
        c4.setText("Confirm Password");
        c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        c4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                c4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                c4FocusLost(evt);
            }
        });
        s.add(c4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 220, 30));

        jButton11.setBackground(new java.awt.Color(255, 255, 204));
        jButton11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(0, 102, 255));
        jButton11.setText("Save");
        jButton11.setBorder(null);
        jButton11.setContentAreaFilled(false);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        s.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, 50, 30));

        c3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        c3.setForeground(new java.awt.Color(153, 153, 153));
        c3.setText("Password");
        c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        c3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                c3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                c3FocusLost(evt);
            }
        });
        s.add(c3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 220, 30));

        c5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        c5.setForeground(new java.awt.Color(204, 204, 204));
        c5.setText("Username");
        c5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                c5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                c5FocusLost(evt);
            }
        });
        s.add(c5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 220, 30));

        a2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        a2.setForeground(new java.awt.Color(204, 204, 204));
        a2.setText("ID");
        a2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                a2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                a2FocusLost(evt);
            }
        });
        a2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a2MouseClicked(evt);
            }
        });
        s.add(a2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 220, 30));

        c1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        c1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "STAFF", "ADMIN" }));
        c1.setBorder(null);
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        s.add(c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 220, 30));

        jToggleButton1.setBackground(new java.awt.Color(255, 255, 204));
        jToggleButton1.setFont(new java.awt.Font("MS PGothic", 1, 12)); // NOI18N
        jToggleButton1.setText("Reset");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        s.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, -1, 30));

        jLayeredPane1.add(s, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 500));

        acc.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 770, 500));

        jSeparator1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        acc.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 800, 530));

        jButton18.setBackground(new java.awt.Color(255, 255, 204));
        jButton18.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        jButton18.setText("Create Account");
        jButton18.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton18FocusLost(evt);
            }
        });
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        acc.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 210, 30));

        jButton19.setBackground(new java.awt.Color(255, 255, 204));
        jButton19.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        jButton19.setText("Trainer");
        jButton19.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton19FocusLost(evt);
            }
        });
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        acc.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 210, 30));

        jButton20.setBackground(new java.awt.Color(255, 255, 204));
        jButton20.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        jButton20.setText("Account");
        jButton20.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton20FocusLost(evt);
            }
        });
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        acc.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 210, 30));

        jButton23.setBackground(new java.awt.Color(255, 255, 204));
        jButton23.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        jButton23.setText("Payment Record");
        jButton23.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton23FocusLost(evt);
            }
        });
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        acc.add(jButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 210, 30));

        jTabbedPane1.addTab("   Options   ", acc);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1040, 570));

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setPreferredSize(new java.awt.Dimension(244, 744));

        Blogout.setBackground(new java.awt.Color(255, 255, 178));
        Blogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/EXIT.png"))); // NOI18N
        Blogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlogoutActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(255, 255, 178));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/gym icon2.png"))); // NOI18N
        jLabel4.setText("Muscle Factory Fitness Gym");

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 51));
        jLabel13.setText("Marcos District, Talavera, Nueva Ecija");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 605, Short.MAX_VALUE)
                .addComponent(Blogout, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Blogout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 640));

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1036, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 640, 1040, 50));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlogoutActionPerformed
    int a=JOptionPane.showConfirmDialog(null,"Are you sure you want to logout?","Select",JOptionPane.YES_NO_OPTION);
 
    if (a==0){
        setVisible(false);
        new Login().setVisible(true);
    }
    }//GEN-LAST:event_BlogoutActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    int a=JOptionPane.showConfirmDialog(null,"Are you sure you want to close application?","Select",JOptionPane.YES_NO_OPTION);
 
    if (a==0){
    System.exit(0);  
    }
   
    }//GEN-LAST:event_jButton8ActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

        jButton4.setEnabled(true);
        jButton5.setEnabled(true);
        int checkid=0;
        String MEMBER_ID=MIDv.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from member where MEMBER_ID='"+MEMBER_ID+"'");
            while(rs.next())
            {
                checkid=1;
                MIDv.setEditable(true);
                namev.setText(rs.getString(2));
                numberv.setText(rs.getString(3));
                genderv.setEditable(false);
                agev.setText(rs.getString(5));
                agev.setText(rs.getString(6));
                h.setText(rs.getString(7));
                w.setText(rs.getString(8));
                bmi.setText(rs.getString(9));
                Activev.setText(rs.getString(10));
                endAtv.setText(rs.getString(11));
                amountv.setText(rs.getString(12));
            }
            if(checkid==0)
            JOptionPane.showMessageDialog(null,"Member ID does not Exist");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void MIDvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MIDvMouseClicked

        search.setEnabled(true);
        try
        {
            int ID=1;
            String str1=String.valueOf(ID);
            MIDv.setText(str1);
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select max(MEMBER_ID) from member");
            while(rs.next())
            {
                ID=rs.getInt(1);
                ID=ID+1;
                String str=String.valueOf(ID);
                MIDv.setText(str);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_MIDvMouseClicked

    private void yearvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearvActionPerformed

    int num2 = Integer.parseInt((String)yearv.getSelectedItem());
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Date dateobj = new Date();
            Activev.setText(df.format(dateobj));

            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.MONTH, num2);
            Date expiryDate = cal.getTime();
            endAtv.setText(df.format(expiryDate));
        
    }//GEN-LAST:event_yearvActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

                int checkid=0;
                String MEMBER_ID=MIDv.getText();
                String NAME=namev.getText();
                String CONTACT_NUMBER=numberv.getText();
                String GENDER=(String)genderv.getSelectedItem();
                String AGE=agev.getText();
                String HE=h.getText();
                String WE=w.getText();
                String yy=y.getText();
                String mm=m.getText();
                String bb=d.getText();
                String s="";
                String s1= s.concat(yy).concat("-").concat(mm).concat("-").concat(bb);
                String BMI=bmi.getText();
                String MEM_ACTIVE_AT=Activev.getText();
                String MEM_END_AT=endAtv.getText();
                String AMOUNT=amountv.getText();
                String st=" ";
                
                    if(CONTACT_NUMBER.matches("^[0-9]*$") && CONTACT_NUMBER.length()==11){
                        checkid=1;
                    }else{
                        checkid=0;
                        JOptionPane.showMessageDialog(null, "Contact  is Incorrect");
                    }
                    
                if(checkid==1)  
                try
                {
                    Connection co=ConnectionProvider.getCon();
                    PreparedStatement ps=co.prepareStatement("insert into member values (?,?,?,?,?,?,?,?,?,?,?,?,?)");

                    ps.setString(1, MEMBER_ID);
                    ps.setString(2, NAME);
                    ps.setString(3, CONTACT_NUMBER);
                    ps.setString(4, GENDER);
                    ps.setString(5, s1);
                    ps.setString(6, AGE);
                    ps.setString(7, HE);
                    ps.setString(8, WE);
                    ps.setString(9, BMI);
                    ps.setString(10, MEM_ACTIVE_AT);
                    ps.setString(11, MEM_END_AT);
                    ps.setString(12, AMOUNT);
                    ps.setString(13, st);
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Add Succesfully");
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, e);
                }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int a=JOptionPane.showConfirmDialog(null,"Do you really want to Delete","Select",JOptionPane.YES_NO_OPTION);
        if(a==0)
        {
            String MEMBER_ID=MIDv.getText();
            try
            {
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
                st.executeUpdate("delete from member where MEMBER_ID='"+MEMBER_ID+"'");

                JOptionPane.showMessageDialog(null,"Successfully Delete");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Select the member ID first before you want to delere");
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        namev.setText(null);
        numberv.setText(null);
        agev.setText(null);
        Activev.setText(null);
        endAtv.setText(null);
        amountv.setText(null);
        h.setText(null);
        w.setText(null);
        y.setText(null);
        m.setText(null);
        d.setText(null);
        bmi.setText(null);
        MIDv.setText(null);
        jButton5.setEnabled(false);
        jButton4.setEnabled(false);
        search.setEnabled(false);
        jButton3.setEnabled(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String MEMBER_ID=MIDv.getText();
        String NAME=namev.getText();
        String yy=y.getText();
        String mm=m.getText();
        String bb=d.getText();
        String s="";
        String s1= s.concat(yy).concat("-").concat(mm).concat("-").concat(bb);
        String CONTACT_NUMBER=numberv.getText();
        String GENDER=(String)genderv.getSelectedItem();
        String AGE=agev.getText();
        String HE=h.getText();
        String WE=w.getText();
        String BMI=bmi.getText();        
        String MEM_ACTIVE_AT=Activev.getText();
        String MEM_END_AT=endAtv.getText();
        String AMOUNT=amountv.getText();

        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("update member set FULL_NAME=?, CONTACT_NUMBER=?, GENDER=?, BIRTH_DATE=?, AGE=?, HEIGHT=?, WEIGHT=?, BMI=?, MEM_ACTIVE_AT=?, MEM_END_AT=?, AMOUNT=? where MEMBER_ID=?");

            ps.setString(1, NAME);
            ps.setString(2, CONTACT_NUMBER);
            ps.setString(3, GENDER);
            ps.setString(4, s1);
            ps.setString(5, AGE);
            ps.setString(6, HE);
            ps.setString(7, WE);
            ps.setString(8, BMI);
            ps.setString(9, MEM_ACTIVE_AT);
            ps.setString(10, MEM_END_AT);
            ps.setString(11, AMOUNT);
            ps.setString(12, MEMBER_ID);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Update Succesfully");
        }

        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "select the member ID first before you want to update");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void search2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search2ActionPerformed
        clist.setModel(new DefaultTableModel(null, new String[]{"TRAN_ID","FULL NAME","CONTACT NUMBER","DATE","TIME","AMOUNT","TRAINER_ID","SESSION_ID","SESSION","EQUIPMENT","WEIGHT","SETS","REPS"}));
        int checkid=0;
        String date=log1.getText();
        try
        {
            DefaultTableModel model=(DefaultTableModel)clist.getModel();
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from dailylog where DATE='"+date+"'");
            while(rs.next())
            {
                checkid=1;
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11),rs.getString(12),rs.getString(13)});
            }
            if(checkid==0)
            JOptionPane.showMessageDialog(null,"date does not Exist");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_search2ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        memberlist.setModel(new DefaultTableModel(null, new String[]{"MEM_ID","FULL NAME","CONTACT NUMBER","GENDER","BIRTH_DATE","AGE","HEIGHT","WEIGHT","BMI","MEM_ACTIVE_AT","MEM_END_AT","AMOUNT","STATUS"}));
        DefaultTableModel model=(DefaultTableModel)memberlist.getModel();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("Select * from member");
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11),rs.getString(12),rs.getString(13)});
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        clist.setModel(new DefaultTableModel(null, new String[]{"TRAN_ID","FULL NAME","CONTACT NUMBER","DATE","TIME","AMOUNT","TRAINER_ID","SESSION_ID","SESSION","EQUIPMENT","WEIGHT","SETS","REPS"}));
        DefaultTableModel mode=(DefaultTableModel)clist.getModel();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("Select * from dailylog");
            while(rs.next())
            {
                mode.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11),rs.getString(12),rs.getString(13)});
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void cBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBox2ActionPerformed
        if(cBox2.isSelected()){
            c3.setEchoChar((char)0);
            c4.setEchoChar((char)0);
        }
        else{
            c3.setEchoChar('*');
            c4.setEchoChar('*');
        }
    }//GEN-LAST:event_cBox2ActionPerformed

    private void c4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c4FocusGained
        inc1.setVisible(false);
        if(c4.getText().equals("Confirm Password")){
            c4.setText("");
            c4.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_c4FocusGained

    private void c4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c4FocusLost
        inc1.setVisible(false);
        if(c4.getText().equals("")){
            c4.setText("Confirm Password");
            c4.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_c4FocusLost

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        int checkid=0;
        String ACC_ID=a2.getText();
        String user=c5.getText();

        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select ACCOUNT_ID, USER_NAME from account");

            while(rs.next()){

                if(ACC_ID.equals(rs.getString(1))){
                    checkid=1;
                    JOptionPane.showMessageDialog(null,"Id has already exist");
                }else if(user.equals(rs.getString(2))){
                    checkid=1;
                    JOptionPane.showMessageDialog(null,"Username has already exist");
                }
            }
            if(checkid==0){
                inc1.setVisible(false);
                if(c3.getText().equals(c4.getText())){
                    String PASSWORD=c3.getText();
                    String ACCOUNT_ID=a2.getText();
                    String USER_NAME=c5.getText();
                    String USER_TYPE=(String)c1.getSelectedItem();

                    try
                    {
                        Connection co=ConnectionProvider.getCon();
                        PreparedStatement p=co.prepareStatement("insert into account values (?,?,?,?)");
                        p.setString(1, ACCOUNT_ID);
                        p.setString(2, USER_NAME);
                        p.setString(3, PASSWORD);
                        p.setString(4, USER_TYPE);
                        p.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Account has activate");
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }else{
                    inc1.setVisible(true);
                }
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void c3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c3FocusGained
        inc1.setVisible(false);
        if(c3.getText().equals("Password")){
            c3.setText("");
            c3.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_c3FocusGained

    private void c3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c3FocusLost
        inc1.setVisible(false);
        if(c3.getText().equals("")){
            c3.setText("Password");
            c3.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_c3FocusLost

    private void c5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c5FocusGained

        inc1.setVisible(false);
        if(c5.getText().equals("Username")){
            c5.setText("");
            c5.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_c5FocusGained

    private void c5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_c5FocusLost

        inc1.setVisible(false);
        if(c5.getText().equals("")){
            c5.setText("Username");
            c5.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_c5FocusLost

    private void a2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_a2FocusGained
        inc1.setVisible(false);
        if(a2.getText().equals("ID")){
            a2.setText("");
            a2.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_a2FocusGained

    private void a2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_a2FocusLost
        inc1.setVisible(false);
        if(a2.getText().equals("")){
            a2.setText("ID");
            a2.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_a2FocusLost

    private void a2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a2MouseClicked
        try
        {
            int AccId=1;
            String str1=String.valueOf(AccId);
            a2.setText(str1);
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select max(ACCOUNT_ID) from account");
            while(rs.next())
            {
                AccId=rs.getInt(1);
                AccId=AccId+1;
                String str=String.valueOf(AccId);
                a2.setText(str);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_a2MouseClicked

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        int checkid=0;
        String ACCOUNT_ID=acc1.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from account where ACCOUNT_ID='"+ACCOUNT_ID+"'");
            while(rs.next())
            {
                checkid=1;
                acc1.setEditable(true);
                user.setText(rs.getString(2));
                pass.setText(rs.getString(3));
            }
            if(checkid==0)
            JOptionPane.showMessageDialog(null,"Branch ID does not Exist");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            pass.setForeground(new Color(0,0,0));
            user.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        String ACCOUNT_ID=acc1.getText();
        String USER_NAME=user.getText();
        String PASSWORD=pass.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("update account set USER_NAME=?, PASSWORD=? where ACCOUNT_ID=?");
            ps.setString(1, USER_NAME);
            ps.setString(2, PASSWORD);
            ps.setString(3, ACCOUNT_ID);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Update Succesfully");
        }

        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Select the account ID first");
        }
    }//GEN-LAST:event_jButton33ActionPerformed

    private void userFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFocusGained
        if(user.getText().equals("New username")){
            user.setText("");
            user.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_userFocusGained

    private void userFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFocusLost
        if(user.getText().equals("")){
            user.setText("New username");
            user.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_userFocusLost

    private void passFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passFocusGained
        if(pass.getText().equals("New password")){
            pass.setText("");
            pass.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_passFocusGained

    private void passFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passFocusLost
        if(pass.getText().equals("")){
            pass.setText("New password");
            pass.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_passFocusLost

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        int a=JOptionPane.showConfirmDialog(null,"Do you really want to Delete","Select",JOptionPane.YES_NO_OPTION);
        if(a==0)
        {
            String ACCOUNT_ID=acc1.getText();
            try
            {
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
                st.executeUpdate("delete from account where ACCOUNT_ID='"+ACCOUNT_ID+"'");

                JOptionPane.showMessageDialog(null,"Successfully Delete");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Select the account ID first");
            }
        }
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        aclist.setModel(new DefaultTableModel(null, new String[]{"ACCOUNT_ID","USER_NAME","PASSWORD","USER_TYPE"}));

        DefaultTableModel model=(DefaultTableModel)aclist.getModel();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("Select * from account");
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void T1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_T1MouseClicked
        try
        {
            int TRAINER_ID=1;
            String str1=String.valueOf(TRAINER_ID);
            T1.setText(str1);
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select max(TRAINER_ID) from trainer");
            while(rs.next())
            {
                TRAINER_ID=rs.getInt(1);
                TRAINER_ID=TRAINER_ID+1;
                String str=String.valueOf(TRAINER_ID);
                T1.setText(str);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_T1MouseClicked

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        String TRAINER_ID=T1.getText();
        String FIRST_NAME=tf.getText();
        String MIDDLE_NAME=tf2.getText();
        String LAST_NAME=tf3.getText();
        String CONTACT_NUMBER=tc.getText();
        String ADDRESS=ta.getText();

        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("update trainer set FIRST_NAME=?, MIDDLE_NAME=?, LAST_NAME=?, NUMBER=?, ADDRESS=? where TRAINER_ID=?");

            ps.setString(1, FIRST_NAME);
            ps.setString(2, MIDDLE_NAME);
            ps.setString(3, LAST_NAME);
            ps.setString(4, CONTACT_NUMBER);
            ps.setString(5, ADDRESS);
            ps.setString(6, TRAINER_ID);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Update Succesfully");
        }

        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Select the ID first before you update the data");
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        String TRAINER_ID=T1.getText();
        String FIRST_NAME=tf.getText();
        String MIDDLE_NAME=tf2.getText();
        String LAST_NAME=tf3.getText();
        String CONTACT_NUMBER=tc.getText();
        String ADDRESS=ta.getText();

        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("insert into trainer values (?,?,?,?,?,?)");

            ps.setString(1, TRAINER_ID);
            ps.setString(2, FIRST_NAME);
            ps.setString(3, MIDDLE_NAME);
            ps.setString(4, LAST_NAME);
            ps.setString(5, CONTACT_NUMBER);
            ps.setString(6, ADDRESS);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Save Succesfully");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "you need to fill up the form first before you add");
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed

        tlist.setModel(new DefaultTableModel(null, new String[]{"TRAINER ID","FIRST NAME","MIDDLE NAME","LAST NAME","CONTACT_NUMBER","ADDRESS"}));

        DefaultTableModel model=(DefaultTableModel)tlist.getModel();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("Select * from trainer");
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6)});
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void bnamev3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnamev3ActionPerformed
        int checkid=0;
        String TRAINER_ID=T1.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from trainer where TRAINER_ID='"+TRAINER_ID+"'");
            while(rs.next())
            {
                checkid=1;
                T1.setEditable(true);
                tf.setText(rs.getString(2));
                tf2.setText(rs.getString(3));
                tf3.setText(rs.getString(4));
                tc.setText(rs.getString(5));
                ta.setText(rs.getString(6));

            }
            if(checkid==0)
            JOptionPane.showMessageDialog(null,"Trainer ID does not Exist");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_bnamev3ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        int a=JOptionPane.showConfirmDialog(null,"Do you really want to Delete","Select",JOptionPane.YES_NO_OPTION);
        if(a==0)
        {
            String TRAINER_ID=T1.getText();
            try
            {
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
                st.executeUpdate("delete from trainer where TRAINER_ID='"+TRAINER_ID+"'");

                JOptionPane.showMessageDialog(null,"Successfully Delete");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Select the ID first before you delete");
            }
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
    t.setVisible(true);
    a.setVisible(false);
    s.setVisible(false);
    sales.setVisible(false);
    jButton19.setBackground(new Color(153,255,153));
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
    t.setVisible(false);
    a.setVisible(true);
    s.setVisible(false);
    sales.setVisible(false);
    jButton20.setBackground(new Color(153,255,153));
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
    t.setVisible(false);
    a.setVisible(false);
    s.setVisible(true);
    sales.setVisible(false);
    jButton18.setBackground(new Color(153,255,153));
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton19FocusLost
    jButton19.setBackground(new Color(255,255,204));
    }//GEN-LAST:event_jButton19FocusLost

    private void jButton20FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton20FocusLost
    jButton20.setBackground(new Color(255,255,204));
    }//GEN-LAST:event_jButton20FocusLost

    private void jButton18FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton18FocusLost
    jButton18.setBackground(new Color(255,255,204));
    }//GEN-LAST:event_jButton18FocusLost

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        c5.setText(null);
        c3.setText(null);
        c4.setText(null);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        namev.setText(null);
        numberv.setText(null);
        agev.setText(null);
        Activev.setText(null);
        endAtv.setText(null);
        amountv.setText(null);
        MIDv.setText(null);
        cname.setText(null);
        cnumbe.setText(null);
        date.setText(null);
        camount.setText(null);
        y.setText(null);
        m.setText(null);
        d.setText(null);
        sn.setText(null);
        t2.setText(null);
        CIDv1.setText(null);
        jButton3.setEnabled(false);
        jButton5.setEnabled(false);
        jButton4.setEnabled(false);
        search.setEnabled(false);
        search1.setEnabled(false);
        DELETE.setEnabled(false);
        ADD.setEnabled(false);
        UPDATE.setEnabled(false);
        
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void amountvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_amountvMouseClicked
        jButton3.setEnabled(true);
    }//GEN-LAST:event_amountvMouseClicked

    private void StatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatActionPerformed
        
        int checkid=0;
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date dateobj = new Date();

        if(checkid == 0){
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from member where MEMBER_ID");
            JOptionPane.showMessageDialog(null, "Status Updated");
            while(rs.next())
                
            {           
                checkid=1;
                String id=rs.getString(1);
                String end=rs.getString(10);     
                String at=rs.getString(11);
                Date date1=new SimpleDateFormat("yyyy-MM-dd").parse(at);
                Date date2=new SimpleDateFormat("yyyy-MM-dd").parse(end);

                try
                { 
                    PreparedStatement ps=con.prepareStatement("update member set STATUS=? where MEMBER_ID=?");
                for(int s=0; s<checkid;s++){
                if(dateobj.before(date1) || dateobj.before(date2)){
                    ps.setString(1, "Active");
                }else{
                    ps.setString(1, "Inactive");
                }
                    ps.setString(2, id);                        
                    ps.executeUpdate();                  
                }

                }
                
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Something Wrong!!!");
                }                                      
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }              
        }           
    }//GEN-LAST:event_StatActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
    double H = Double.parseDouble(h.getText());
    double W = Double.parseDouble(w.getText());
    double result = ((W * 703)/(H * H));
    String b = String.format("%.2f", result);
    bmi.setText(b);
    }//GEN-LAST:event_jButton25ActionPerformed

    private void search3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search3ActionPerformed
        ADD.setEnabled(true);
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date dateobj = new Date();
        String d=(df.format(dateobj));
        
        Calendar cal = Calendar.getInstance(); 
        cal.getTime(); 
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss"); 
        t3.setText(sdf.format(cal.getTime()));

        int D=1;
        String str1=String.valueOf(D);
        sn.setText(str1);

        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet r=st.executeQuery("select max(TRAN_ID) from dailylog");

            while(r.next())
            {
                D=r.getInt(1);
                D=D+1;
                String str=String.valueOf(D);
                sn.setText(str);
            }
            
            String CUSTOMER_ID=CIDv1.getText();
            String q=sn.getText();
            ResultSet rs=st.executeQuery("select * from member where MEMBER_ID='"+CUSTOMER_ID+"'");
            while(rs.next())
            {
                sn.setText(q);
                cname.setText(rs.getString(2));
                cnumbe.setText(rs.getString(3));
                date.setText(d);
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_search3ActionPerformed

    private void snMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_snMouseClicked

        search1.setEnabled(true);
        DELETE.setEnabled(true);
        UPDATE.setEnabled(true);
        try
        {
            int D=1;
            String str1=String.valueOf(D);
            sn.setText(str1);
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select max(TRAN_ID) from dailylog");
            while(rs.next())
            {
                D=rs.getInt(1);
                D=D+1;
                String str=String.valueOf(D);
                sn.setText(str);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_snMouseClicked

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed

        DELETE.setEnabled(true);
        UPDATE.setEnabled(true);
        int checkid=0;
        String CUSTOMER_ID=sn.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from dailylog where TRAN_ID='"+CUSTOMER_ID+"'");
            while(rs.next())
            {
                checkid=1;
                sn.setEditable(true);
                cname.setText(rs.getString(2));
                cnumbe.setText(rs.getString(3));
                date.setText(rs.getString(4));
                t3.setText(rs.getString(5));
                camount.setText(rs.getString(6));
                t2.setText(rs.getString(7));
                tr.setText(rs.getString(8));
                e32.setText(rs.getString(10));
                na6.setText(rs.getString(11));
                na7.setText(rs.getString(12));
                na8.setText(rs.getString(13));
            }
            if(checkid==0)
            JOptionPane.showMessageDialog(null,"Member ID does not Exist");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_search1ActionPerformed

    private void dateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateMouseClicked
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date dateobj = new Date();
        date.setText(df.format(dateobj));
    }//GEN-LAST:event_dateMouseClicked

    private void camountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_camountMouseClicked
        ADD.setEnabled(true);
    }//GEN-LAST:event_camountMouseClicked

    private void na8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_na8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_na8MouseClicked

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
        int a=JOptionPane.showConfirmDialog(null,"Do you really want to Delete!!!","Select",JOptionPane.YES_NO_OPTION);
        if(a==0)
        {
            String CUSTOMER_ID=sn.getText();
            try
            {
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
                st.executeUpdate("delete from dailylog where TRAN_ID='"+CUSTOMER_ID+"'");

                JOptionPane.showMessageDialog(null,"Successfully Delete");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "select the customer ID first before you want to delete");
            }
        }
    }//GEN-LAST:event_DELETEActionPerformed

    private void RESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RESETActionPerformed
        cname.setText(null);
        cnumbe.setText(null);
        date.setText(null);
        camount.setText(null);
        sn.setText(null);
        search1.setEnabled(false);
        DELETE.setEnabled(false);
        UPDATE.setEnabled(false);
        ADD.setEnabled(false);
        na6.setText(null);
        na7.setText(null);
        na8.setText(null);
        t3.setText(null);
        t2.setText(null);
        e32.setText(null);
    }//GEN-LAST:event_RESETActionPerformed

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        
                try
        {
            int D=1;
            String str1=String.valueOf(D);
            sn.setText(str1);
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select max(SESSION_ID) from dailylog");
            while(rs.next())
            {
                D=rs.getInt(1);
                D=D+1;
                String str=String.valueOf(D);
                tr.setText(str);
                sn.setText(str);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
                
        int checkid=0;
        String D=t2.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from trainer where TRAINER_ID='"+D+"'");
            while(rs.next())
            {
                checkid=1;
            }
            if(checkid==0){
            JOptionPane.showMessageDialog(null, "Trainer not Exist");}
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        String CONTACT_NUMBE=cnumbe.getText();
        if(CONTACT_NUMBE.matches("^[0-9]*$") && CONTACT_NUMBE.length()==11){
        }else{
        checkid=0;
        JOptionPane.showMessageDialog(null, "Contact  is Incorrect");
        }
        
        String CUSTOMER_ID=sn.getText();
        String NAME=cname.getText();
        String CONTACT_NUMBER=cnumbe.getText();
        String DATE=date.getText();
        String TIME=t3.getText();
        String AMOUNT=camount.getText();
        String TRAINER_ID=t2.getText();
        String WEIGHT=na8.getText();
        String SETS=na7.getText();
        String REPS=na6.getText();
        String SESSION_ID=tr.getText();
        
        String EQUI="",l="";
        String se="",s="";


        if (e17.isSelected()) {
            String a=e17.getText();
            l=a+ ", " + l;
        }
        if (e18.isSelected()) {
            String a=e18.getText();
            l=a+ ", " + l;
        }
        if (e19.isSelected()) {
            String a=e19.getText();
            l=a+ ", " + l;
        }
        if (e20.isSelected()) {
            String a=e20.getText();
            l=a+ ", " + l;
        }
        if (e21.isSelected()) {
            String a=e21.getText();
            l=a+ ", " + l;
        }
        if (e22.isSelected()) {
            String a=e22.getText();
            l=a+ ", " + l;
        }
        if (e23.isSelected()) {
            String a=e23.getText();
            l=a+ ", " + l;
        }
        if (e24.isSelected()) {
            String a=e24.getText();
            l=a+ ", " + l;
        }
        if (e25.isSelected()) {
            String a=e25.getText();
            l=a+ ", " + l;
        }
        EQUI=l;

        if (e26.isSelected()) {
            String a=e26.getText();
            s=a+ ", " + s;
        }
        if (e27.isSelected()) {
            String a=e27.getText();
            s=a+ ", " + s;
        }
        if (e28.isSelected()) {
            String a=e28.getText();
            s=a+ ", " + s;
        }
        if (e29.isSelected()) {
            String a=e29.getText();
            s=a+ ", " + s;
        }
        if (e30.isSelected()) {
            String a=e30.getText();
            s=a+ ", " + s;
        }
        if (e31.isSelected()) {
            String a=e31.getText();
            s=a+ ", " + s;
        }
        if (e33.isSelected()) {
            String a=e33.getText();
            s=a+ ", " + s;
        }
        se=s;
        
        if(checkid==1)
        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("insert into dailylog values (?,?,?,?,?,?,?,?,?,?,?,?,?)");

            ps.setString(1, CUSTOMER_ID);
            ps.setString(2, NAME);
            ps.setString(3, CONTACT_NUMBER);
            ps.setString(4, DATE);
            ps.setString(5, TIME);
            ps.setString(6, AMOUNT);
            ps.setString(7, TRAINER_ID);
            ps.setString(8, SESSION_ID);
            ps.setString(9, se);
            ps.setString(10, EQUI);
            if(WEIGHT.isEmpty()){
                ps.setNull(11, Types.DOUBLE);}
            else{
                ps.setString(11, WEIGHT);}
            ps.setString(12, SETS);
            ps.setString(13, REPS);
            
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Add Succesfully");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "fill up the form first");
        }
               
    }//GEN-LAST:event_ADDActionPerformed

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
        String CUSTOMER_ID=sn.getText();
        String NAME=cname.getText();
        String CONTACT_NUMBER=cnumbe.getText();
        String DATE=date.getText();
        String AMOUNT=camount.getText();
        String TRAINER_ID=t2.getText();
        String TIME=t3.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("update dailylog set FULL_NAME=?, CONTACT_NUMBER=?, DATE=?, TIME=?, AMOUNT=?, TRAINER_ID=? where TRAN_ID=?");

            ps.setString(1, NAME);
            ps.setString(2, CONTACT_NUMBER);
            ps.setString(3, DATE);
            ps.setString(4, TIME);
            ps.setString(5, AMOUNT);
            ps.setString(6, TRAINER_ID);
            ps.setString(7, CUSTOMER_ID);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Update Succesfully");
        }

        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "select the customer ID first before you want to update");
        }
    }//GEN-LAST:event_UPDATEActionPerformed

    private void log2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_log2FocusGained
        if(log2.getText().equals("NAME")){
            log2.setText("");
            log2.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_log2FocusGained

    private void log2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_log2FocusLost
        if(log2.getText().equals("")){
            log2.setText("NAME");
            log2.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_log2FocusLost

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        clist.setModel(new DefaultTableModel(null, new String[]{"TRAN_ID","FULL NAME","CONTACT NUMBER","DATE","TIME","AMOUNT","TRAINER_ID","SESSION_ID","SESSION","EQUIPMENT","WEIGHT","SETS","REPS"}));
        DefaultTableModel mode=(DefaultTableModel)clist.getModel();
        String Id=log2.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("Select * from dailylog where FULL_NAME='"+Id+"'");
            while(rs.next())
            {
                mode.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11),rs.getString(13),rs.getString(13)});
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void log1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_log1FocusGained
        if(log1.getText().equals("DATE")){
            log1.setText("");
            log1.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_log1FocusGained

    private void log1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_log1FocusLost
        if(log1.getText().equals("")){
            log1.setText("DATE");
            log1.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_log1FocusLost

    private void t3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t3MouseClicked
    Calendar cal = Calendar.getInstance(); 
    cal.getTime(); 
    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss"); 
    t3.setText(sdf.format(cal.getTime()));
    }//GEN-LAST:event_t3MouseClicked

    private void jButton23FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton23FocusLost
    jButton23.setBackground(new Color(255,255,204));
    }//GEN-LAST:event_jButton23FocusLost

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
    t.setVisible(false);
    a.setVisible(false);
    s.setVisible(false);
    sales.setVisible(true);
    
    }//GEN-LAST:event_jButton23ActionPerformed

    private void PRINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRINTActionPerformed

        int Checkid=0;
        String S="DATE";
        String N="NAME";
        String date=log1.getText(); 
        String NAME=log2.getText();
        try{
            Connection con=ConnectionProvider.getCon();
            JasperDesign jasdi= JRXmlLoader.load("C:\\Users\\User\\Documents\\NetBeansProjects\\Gym management System\\src\\reportDailylog.jrxml");
            
            if(date.equals(S) && NAME.equals(N)){
            Checkid=1;    
            String sql="select * from dailylog";
            JRDesignQuery newQuery=new JRDesignQuery();
            newQuery.setText(sql);
            jasdi.setQuery(newQuery);
            JasperReport js=JasperCompileManager.compileReport(jasdi);
            JasperPrint jp=JasperFillManager.fillReport(js,null,con);
            JasperViewer.viewReport(jp);
            }
            if(NAME.equals(N)&& Checkid==0)
            {
            Checkid=1;   
            String sql="select * from dailylog where DATE='"+date+"'";
            JRDesignQuery newQuery=new JRDesignQuery();
            newQuery.setText(sql);
            jasdi.setQuery(newQuery);
            JasperReport js=JasperCompileManager.compileReport(jasdi);
            JasperPrint jp=JasperFillManager.fillReport(js,null,con);
            JasperViewer.viewReport(jp);
            }
            if(date.equals(S)&&Checkid==0)
            {
            String sql="select * from dailylog where FULL_NAME='"+NAME+"'";
            JRDesignQuery newQuery=new JRDesignQuery();
            newQuery.setText(sql);
            jasdi.setQuery(newQuery);
            JasperReport js=JasperCompileManager.compileReport(jasdi);
            JasperPrint jp=JasperFillManager.fillReport(js,null,con);
            JasperViewer.viewReport(jp);
            }
        }   
        catch(Exception e){
        }
        
    }//GEN-LAST:event_PRINTActionPerformed

    private void cnumbeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnumbeKeyReleased
        String CONTACT_NUMBER=cnumbe.getText();
        if(CONTACT_NUMBER.matches("^[0-9]*$") && CONTACT_NUMBER.length()==11){
        cnumbe.setBackground(Color.white);
        }else{
        cnumbe.setBackground(Color.red);
        }
    }//GEN-LAST:event_cnumbeKeyReleased

    private void t2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t2KeyReleased
        
        int checkid=0;
        String D=t2.getText();
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select * from trainer where TRAINER_ID='"+D+"'");
            while(rs.next())
            {
                checkid=1;
                t2.setBackground(Color.white);
            }
            if(checkid==0)
            t2.setBackground(Color.red);
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_t2KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            int checkid=0;
            salestable.setModel(new DefaultTableModel(null, new String[]{"YEAR","SALES"}));
            DefaultTableModel model=(DefaultTableModel)salestable.getModel();
            try
            {
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery("select year(DATE),sum(AMOUNT) from dailylog group by year(DATE) order by year(DATE), month(DATE)");
                while(rs.next())
                    {
                    checkid=1;
                    model.addRow(new Object[]{rs.getString(1),rs.getString(2)});
                    }              
                if(checkid==0)
                JOptionPane.showMessageDialog(null,"something Wrong");
                }
            catch(Exception e)
            {
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void MONTHLYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MONTHLYActionPerformed
            int checkid=0;
            salestable.setModel(new DefaultTableModel(null, new String[]{"YEAR","MONTH","PAYMENT"}));
            DefaultTableModel model=(DefaultTableModel)salestable.getModel();
            try
            {
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery("select year(DATE),date_format(DATE,'%M'),sum(AMOUNT) from dailylog group by year(DATE) order by year(DATE), month(DATE)");
                while(rs.next())
                    {
                    checkid=1;
                    model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
                    }              
                if(checkid==0)
                JOptionPane.showMessageDialog(null,"something Wrong");
                }
            catch(Exception e)
            {
            }
    }//GEN-LAST:event_MONTHLYActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed

        String S="DATE";
        String date=log3.getText();
        try{
            
            Connection con=ConnectionProvider.getCon();
            if(date.equals(S)){
            JasperDesign jasdi= JRXmlLoader.load("C:\\Users\\User\\Documents\\NetBeansProjects\\Gym management System\\src\\sales.jrxml");                
            String sql="select year(DATE),date_format(DATE,'%M'),day(DATE), sum(AMOUNT) from dailylog group by year(DATE), month(DATE), day(DATE) order by year(DATE), month(DATE), day(DATE)";
            JRDesignQuery newQuery=new JRDesignQuery();
            newQuery.setText(sql);
            jasdi.setQuery(newQuery);
            JasperReport js=JasperCompileManager.compileReport(jasdi);
            JasperPrint jp=JasperFillManager.fillReport(js,null,con);
            JasperViewer.viewReport(jp);
            }
            else{
            JasperDesign jasdi= JRXmlLoader.load("C:\\Users\\User\\Documents\\NetBeansProjects\\Gym management System\\src\\sales_subreport1.jrxml");
            String sql="select year(DATE),date_format(DATE,'%M'),day(DATE), AMOUNT from dailylog where DATE='"+date+"' order by year(DATE), month(DATE), day(DATE), AMOUNT";
            JRDesignQuery newQuery=new JRDesignQuery();
            newQuery.setText(sql);
            jasdi.setQuery(newQuery);
            JasperReport js=JasperCompileManager.compileReport(jasdi);
            JasperPrint jp=JasperFillManager.fillReport(js,null,con);
            JasperViewer.viewReport(jp);
            }

        }   
        catch(Exception e){
        }
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void numbervKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numbervKeyReleased
        String CONTACT_NUMBER=numberv.getText();
        if(CONTACT_NUMBER.matches("^[0-9]*$") && CONTACT_NUMBER.length()==11){
        numberv.setBackground(Color.white);
        }else{
        numberv.setBackground(Color.red);
        }
    }//GEN-LAST:event_numbervKeyReleased

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
             int checkid=0;
            salestable.setModel(new DefaultTableModel(null, new String[]{"YEAR","MONTH","DAY","PAYMENT"}));
            DefaultTableModel model=(DefaultTableModel)salestable.getModel();
            try
            {
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
               ResultSet rs=st.executeQuery("select year(DATE),date_format(DATE,'%M'),day(DATE), sum(AMOUNT) from dailylog group by year(DATE), month(DATE), day(DATE) order by year(DATE), month(DATE), day(DATE)");
               while(rs.next())
                    {
                    checkid=1;
                    model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
                    }              
                if(checkid==0)
                JOptionPane.showMessageDialog(null,"something Wrong");
                }
            catch(Exception e)
            {
            }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void dKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dKeyReleased
       
        int day =Integer.parseInt(d.getText());
        int month =Integer.parseInt(m.getText());
        int year =Integer.parseInt(y.getText());
        
        LocalDate pdate = LocalDate.of(year, month, day);
        LocalDate now = LocalDate.now();
        Period diff = Period.between(pdate, now);
        agev.setText(String.valueOf(diff.getYears()));
    }//GEN-LAST:event_dKeyReleased

    private void PRINT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRINT1ActionPerformed
        try{
            
            Connection con=ConnectionProvider.getCon();
            JasperDesign jasdi= JRXmlLoader.load("C:\\Users\\User\\Documents\\NetBeansProjects\\Gym management System\\src\\member.jrxml");
            String sql="select * from member";
            JRDesignQuery newQuery=new JRDesignQuery();
            newQuery.setText(sql);
            jasdi.setQuery(newQuery);
            JasperReport js=JasperCompileManager.compileReport(jasdi);
            JasperPrint jp=JasperFillManager.fillReport(js,null,con);
            JasperViewer.viewReport(jp);
        }   
        catch(Exception e){
        }
    }//GEN-LAST:event_PRINT1ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        try{
            
            Connection con=ConnectionProvider.getCon();
            JasperDesign jasdi= JRXmlLoader.load("C:\\Users\\User\\Documents\\NetBeansProjects\\Gym management System\\src\\trainer.jrxml");
            String sql="select * from trainer";
            JRDesignQuery newQuery=new JRDesignQuery();
            newQuery.setText(sql);
            jasdi.setQuery(newQuery);
            JasperReport js=JasperCompileManager.compileReport(jasdi);
            JasperPrint jp=JasperFillManager.fillReport(js,null,con);
            JasperViewer.viewReport(jp);
        }   
        catch(Exception e){
        }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void log3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_log3FocusGained
        if(log3.getText().equals("DATE")){
            log3.setText("");
            log3.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_log3FocusGained

    private void log3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_log3FocusLost
        if(log3.getText().equals("")){
            log3.setText("DATE");
            log3.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_log3FocusLost

    private void search4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search4ActionPerformed
        salestable.setModel(new DefaultTableModel(null, new String[]{"YEAR","MONTH","DAY","PAYMENT"}));
        int checkid=0;
        String date=log3.getText();
        try
        {
            DefaultTableModel model=(DefaultTableModel)salestable.getModel();
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select year(DATE),date_format(DATE,'%M'),day(DATE), AMOUNT from dailylog where DATE='"+date+"' order by year(DATE), month(DATE), day(DATE), AMOUNT");
            while(rs.next())
            {
                checkid=1;
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});
            }
            if(checkid==0)
            JOptionPane.showMessageDialog(null,"date does not Exist");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_search4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JTextField Activev;
    private javax.swing.JButton Blogout;
    private javax.swing.JTextField CIDv1;
    private javax.swing.JButton DELETE;
    private javax.swing.JTextField MIDv;
    private javax.swing.JButton MONTHLY;
    private javax.swing.JButton PRINT;
    private javax.swing.JButton PRINT1;
    private javax.swing.JButton RESET;
    private javax.swing.JButton Stat;
    private javax.swing.JTextField T1;
    private javax.swing.JButton UPDATE;
    private javax.swing.JPanel a;
    private javax.swing.JTextField a2;
    private javax.swing.JPanel acc;
    private javax.swing.JTextField acc1;
    private javax.swing.JTable aclist;
    private javax.swing.JTextField agev;
    private javax.swing.JTextField amountv;
    private javax.swing.JTextField bmi;
    private javax.swing.JButton bnamev3;
    private javax.swing.JComboBox<String> c1;
    private javax.swing.JPasswordField c3;
    private javax.swing.JPasswordField c4;
    private javax.swing.JTextField c5;
    private javax.swing.JCheckBox cBox2;
    private javax.swing.JTextField camount;
    private javax.swing.JTable clist;
    private javax.swing.JTextField cname;
    private javax.swing.JTextField cnumbe;
    private javax.swing.JTextField d;
    private javax.swing.JTextField date;
    private javax.swing.JCheckBox e17;
    private javax.swing.JCheckBox e18;
    private javax.swing.JCheckBox e19;
    private javax.swing.JCheckBox e20;
    private javax.swing.JCheckBox e21;
    private javax.swing.JCheckBox e22;
    private javax.swing.JCheckBox e23;
    private javax.swing.JCheckBox e24;
    private javax.swing.JCheckBox e25;
    private javax.swing.JCheckBox e26;
    private javax.swing.JCheckBox e27;
    private javax.swing.JCheckBox e28;
    private javax.swing.JCheckBox e29;
    private javax.swing.JCheckBox e30;
    private javax.swing.JCheckBox e31;
    private javax.swing.JTextField e32;
    private javax.swing.JCheckBox e33;
    private javax.swing.JTextField endAtv;
    private javax.swing.JComboBox<String> genderv;
    private javax.swing.JTextField h;
    private javax.swing.JLabel inc1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField log1;
    private javax.swing.JTextField log2;
    private javax.swing.JTextField log3;
    private javax.swing.JTextField m;
    private javax.swing.JTable memberlist;
    private javax.swing.JTextField na6;
    private javax.swing.JTextField na7;
    private javax.swing.JTextField na8;
    private javax.swing.JTextField namev;
    private javax.swing.JTextField numberv;
    private javax.swing.JTextField pass;
    private javax.swing.JPanel s;
    private javax.swing.JPanel sales;
    private javax.swing.JTable salestable;
    private javax.swing.JButton search;
    private javax.swing.JButton search1;
    private javax.swing.JButton search2;
    private javax.swing.JButton search3;
    private javax.swing.JButton search4;
    private javax.swing.JTextField sn;
    private javax.swing.JPanel t;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    private javax.swing.JTextField ta;
    private javax.swing.JTextField tc;
    private javax.swing.JTextField tf;
    private javax.swing.JTextField tf2;
    private javax.swing.JTextField tf3;
    private javax.swing.JTable tlist;
    private javax.swing.JLabel tr;
    private javax.swing.JTextField user;
    private javax.swing.JTextField w;
    private javax.swing.JTextField y;
    private javax.swing.JComboBox<String> yearv;
    // End of variables declaration//GEN-END:variables
}
